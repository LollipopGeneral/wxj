#!/usr/bin/env python3

import argparse
import collections
import json
import pathlib


HERE = pathlib.Path(__file__).resolve().parent
ROOT = HERE.parent
RAW_DATA_FILE = ROOT / 'raw' / 'data.json'
MID_BLACKLIST_FILE = ROOT / 'raw' / 'blacklist.txt'
PARSED_DATA_DIR = ROOT / 'api'


def parse(raw_data, blacklist):
    for status in raw_data:
        mid = status['mid']
        if mid in blacklist:
            continue
        with open(PARSED_DATA_DIR / f'{mid}.json', 'w') as fp:
            json.dump(status, fp, ensure_ascii=False, indent=2)


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('raw_data_file', nargs='?', default=RAW_DATA_FILE,
                        help='''the raw data file (containing list of statuses)
                        to be parsed, defaulting to raw/data.json''')
    parser.add_argument('blacklist_file', nargs='?', default=MID_BLACKLIST_FILE,
                        help='''the status id blacklist, with one status
                        id per line, defaulting to raw/blacklist.txt''')
    args = parser.parse_args()

    with open(args.blacklist_file) as fp:
        blacklist = [line.strip() for line in fp]
    with open(args.raw_data_file) as fp:
        raw_data = json.load(fp, object_pairs_hook=collections.OrderedDict)
        parse(raw_data, blacklist)


if __name__ == '__main__':
    main()
